//Cohen Sutherland line clipping algorithm



#include<gl/glut.h>
#include<stdio.h>
#define outcode int
double xmin=50,ymin=175,xmax=200,ymax=375;
double xvmin=300,yvmin=175,xvmax=450,yvmax=375;
float x0,y0,x1,y1;
const int RIGHT=8;
const int LEFT=4;
const int TOP=2;
const int BOTTOM=1;

outcode ComputeOutCode(float x,float y)
{
	outcode code=0;
	if(y>ymax)
		code|=TOP;
	else if(y<ymin)
		code|=BOTTOM;
	else if(x>xmax)
		code|=RIGHT;
	else if(x<xmin)
		code|=LEFT;
	return code;
}

void Cohen(float x0,float y0,float x1,float y1)
{
	outcode outcode0,outcode1,outcodeout;
	int accept=false,done=false;
	outcode0=ComputeOutCode(x0,y0);
	outcode1=ComputeOutCode(x1,y1);
	do{
		if(!(outcode0|outcode1))
		{
			accept=true;
			done=true;
		}
		else if(outcode0 & outcode1)
			done=true;
		else
		{
			double x,y;
			outcodeout=outcode0?outcode0:outcode1;
			if(outcodeout & TOP)
			{
				x=x0+(x1-x0)*(ymax-y0)/(y1-y0);
				y=ymax;
			}
			else if(outcodeout & BOTTOM)
			{
				x=x0+(x1-x0)*(ymin-y0)/(y1-y0);
				y=ymin;
			}
			else if(outcodeout & RIGHT)
			{
				y=y0+(y1-y0)*(xmax-x0)/(x1-x0);
				x=xmax;
			}
			else
			{
				y=y0+(y1-y0)*(xmin-x0)/(x1-x0);
				x=xmin;
			}
			if(outcodeout==outcode0)
			{
				x0=x;
				y0=y;
				outcode0=ComputeOutCode(x0,y0);
			}
			else
			{
				x1=x;
				y1=y;
				outcode1=ComputeOutCode(x1,y1);
			}
		}
	}while(!done);
	if(accept)
	{
		double sx=(xvmax-xvmin)/(xmax-xmin);
		double sy=(yvmax-yvmin)/(ymax-ymin);
		double vx0=xvmin+(x0-xmin)*sx;
		double vy0=yvmin+(y0-ymin)*sy;
		double vx1=xvmin+(x1-xmin)*sx;
		double vy1=yvmin+(y1-ymin)*sy;

		glBegin(GL_LINE_LOOP);
			glVertex2f(xvmin,yvmin);
			glVertex2f(xvmax,yvmin);
			glVertex2f(xvmax,yvmax);
			glVertex2f(xvmin,yvmax);
		glEnd();

		glBegin(GL_LINES);
			glVertex2f(vx0,vy0);
			glVertex2f(vx1,vy1);
		glEnd();
	}
}



void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(0.0,0.0,0.0);
	glBegin(GL_LINES);
		glVertex2f(x0,y0);
		glVertex2f(x1,y1);
	glEnd();

	glBegin(GL_LINE_LOOP);
		glVertex2f(xmin,ymin);
		glVertex2f(xmax,ymin);
		glVertex2f(xmax,ymax);
		glVertex2f(xmin,ymax);
	glEnd();
	Cohen(x0,y0,x1,y1);
	glFlush();
}

void myinit()
{
	glClearColor(1.0,1.0,1.0,1.0);
	glColor3f(0.0,0.0,0.0);
	glPointSize(1.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	gluOrtho2D(0.0,500.0,0.0,500.0);
}

void main(int argc,char *argv[])
{	

	printf("Enter the coordinate values for a line\n");
	scanf("%f%f%f%f",&x0,&y0,&x1,&y1);
	
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowSize(500.0,500.0);
	glutInitWindowPosition(0.0,0.0);
	glutCreateWindow("Cohen Sutherland Algorithm");
	glutDisplayFunc(display);
	myinit();
	glutMainLoop();
}